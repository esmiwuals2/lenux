#!/usr/bin/env node
var fs = require('fs');
var cp = require('child_process');
var logfile = 'ldm.log';
var args = process.argv;
var config = {
  tty: 02,
  xdisplay: ':0',
  vnc: false,
  vncdisplay: ':4',
  vncport: 5901
};
if (args[2]) {
  console.log('Using configuration file ' + args[2]);
  fs.readFile(args[2], function(err, data) {
    if (err) {
      console.log('Error reading configuration file; falling back to default config.');
    }
    else {
      config = JSON.parse(data);
    }
  });
}
else {
  console.log('No configuration file specified; falling back to default config.');
}
if (args[3]) {
  console.log('Using log file ' + args[3]);
  logfile = args[3];
}
else {
  console.log('No log file specified; falling back to default log file.');
}
var log = fs.createWriteStream(logfile);
var xserver = cp.exec('/usr/lib/xorg/Xorg ' + config.xdisplay + ' vt' + config.tty);
var xfrontend = cp.exec('/home/lennonmclean/nwjs-sdk/nw ldm-frontend', {env: {DISPLAY: config.xdisplay}});
if (config.vnc) {
  var vncserver = cp.spawn('Xvnc', [config.vncdisplay, '-rfbport', config.vncport]);
  var vncfrontend = cp.spawn(__dirname + '/../../nwjs-sdk/nw', [], {env: {DISPLAY: config.vncdisplay}});
  vncserver.stderr.on('data', function(data) {
    log.write('VNC server: ' + data);
  });
  vncserver.stdout.on('data', function(data) {
    log.write('VNC server: ' + data);
  });
  vncfrontend.stderr.on('data', function(data) {
    log.write('VNC frontend: ' + data);
  });
  vncfrontend.stdout.on('data', function(data) {
    log.write('VNC frontend: ' + data);
  });
  vncfrontend.on('exit', function() {
    vncserver.kill();
    vncserver = cp.spawn('Xvnc', [config.vncdisplay, '-rfbport' + config.vncport]);
  });
}
xserver.stderr.on('data', function(data) {
  log.write('X server: ' + data);
});
xfrontend.stderr.on('data', function(data) {
  log.write('X frontend: ' + data);
});
xserver.stdout.on('data', function(data) {
  log.write('X server: ' + data);
});
xfrontend.stdout.on('data', function(data) {
  log.write('X frontend: ' + data);
});
xfrontend.on('exit', function() {
  xserver.kill();
  xserver = cp.exec('X ' + config.xdisplay + 'vt' + config.tty);
  xfrontend = cp.exec(__dirname + '/../../nwjs-sdk/nw', {env: {DISPLAY: config.xdisplay}});
});
process.on('exit', function() {
  xserver.kill();
});
